{"version":3,"sources":["services/persons.js","notification.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","type","className","Persons","persons","filter","deletePerson","nameList","person","name","toLocaleLowerCase","indexOf","map","key","number","onClick","Filter","handleFilterChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleAddPerson","App","useState","setPersons","setNewName","setNewNumber","setFilter","infoMessage","setInfoMessage","errorMessage","setErrorMessage","getPersons","personServices","initPersons","useEffect","event","target","preventDefault","found","find","x","returnedPerson","setTimeout","catch","reduce","prev","current","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4928a2bc.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  remove: remove \n}","import React from 'react'\n\nconst Notification = ({message, type}) => {\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className={type === 'error' ? 'error' : 'info'}> \n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport personServices from './services/persons'\nimport Notification from './notification'\nimport './index.css'\n\nconst Persons = ({persons, filter, deletePerson}) => {\n  const nameList = persons.filter(person => {\n    if(filter === '') return true;\n    \n    if(person.name.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) !== -1){\n      return true\n    }\n\n    return false;\n  }).map(person => (\n    <div key={person.name}>\n      {`${person.name} ${person.number} `} \n      <button onClick={() => deletePerson(person.id)}>delete</button>\n    </div>\n  ))\n  \n  return(\n    <div>\n      {nameList}\n    </div>\n  )\n}\n\nconst Filter = ({filter, handleFilterChange}) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilterChange}/>\n    </div>\n  )\n}\n\nconst PersonForm = ({newName, newNumber, handleNameChange, handleNumberChange, handleAddPerson}) => {\n  return (\n    <div>\n      <form>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\" onClick={handleAddPerson}>add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ infoMessage, setInfoMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n  \n  const getPersons = () => {\n    personServices\n    .getAll()\n    .then(initPersons => {\n      setPersons(initPersons)\n    })\n  }\n\n  const createPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personServices\n      .create(newPerson)\n      .then(returnedPerson => {\n        \n        setPersons(persons.concat(returnedPerson))\n        setNewName(\"\")\n        setNewNumber(\"\")\n\n        setInfoMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => { \n          setInfoMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updatePerson = (id) => {\n    personServices\n      .update(id, {\n        name: newName,\n        number: newNumber\n      })\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id === returnedPerson.id \n          ? returnedPerson\n          : person\n        ))\n\n        setNewName(\"\")\n        setNewNumber(\"\")\n\n        setInfoMessage(`Updated ${returnedPerson.name}`)\n        setTimeout(() => { \n          setInfoMessage(null)\n        }, 5000)\n      })\n      .catch(() =>{\n        const person = persons.reduce((prev, current) => \n          current.id === id ? {name: current.name} : prev,\n          {name: \"-\"}\n        )\n        \n        setErrorMessage(`Information of ${person.name} has already been removed from server`)\n        setTimeout(() => { \n          setErrorMessage(null)\n        }, 5000)\n        \n        getPersons()\n      })\n  }\n \n  const deletePerson = (id) => {\n    const person = persons.reduce((prev, current) => \n      current.id === id ? {name: current.name} : prev,\n      {name: \"-\"}\n    )\n    if(window.confirm(`Delete ${person.name}?`)){      \n      personServices\n        .remove(id)\n        .then(() => {\n          getPersons()\n\n          setInfoMessage(`Deleted ${person.name}`)\n          setTimeout(() => { \n            setInfoMessage(null)\n          }, 5000)\n        })\n        .catch(() =>{\n          getPersons()\n\n          setErrorMessage(`Information of ${person.name} has already been removed from server`)\n          setTimeout(() => { \n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n\n  }\n\n  useEffect(getPersons, [])\n  \n  const handleAddPerson = (event) => {\n    event.preventDefault();\n    const found = persons.find(x => x.name === newName)\n    \n    if(found){\n      updatePerson(found.id)\n    }else{\n      createPerson();\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type='info' message={infoMessage} />\n      <Notification type='error' message={errorMessage} />\n      <Filter \n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        handleAddPerson={handleAddPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons}\n        filter={filter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}